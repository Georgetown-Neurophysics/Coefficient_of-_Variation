%Ziyue Zhang 7/31/2018
%Calculate the coefficient of variance of ISI for each electrode within 10s
%bins

%Get folders of MEA
pathway = 'C:\Users\James\Desktop\Ziyue\Recordings 2-2018';
folders = dir(pathway);
folders = struct2cell(folders);
folders = folders(1,3:end);

%Format total coefficient of variation 
savepathway2 = strcat(pathway, '\Total_CoV');
total_output = cell(10, length(folders)+5);
for j = 1:length(folders)
    total_output{1,j+1} = folders{j};
end
total_output{2,1} = '5s';
total_output{3,1} = '15s';
total_output{4,1} = '25s';
total_output{5,1} = '35s';
total_output{6,1} = '45s';
total_output{7,1} = '55s';
col = 2;

for i = 1:length(folders)
    %Subfolder for 0004 minute
    path = strcat(pathway, '\', folders{i}, '\', folders{i}, '_0004');
    
    %Create list of electrodes in each MEA folder
    electrodes = dir(path);
    electrodes = struct2cell(electrodes);
    electrodes = electrodes(1,3:end);
    
    %Grab time dependent spikes in 10s bins
    binspathway = strcat(path, '\', electrodes{end});
    load(binspathway);
    
    %Format output spreadsheet
    savepathway = strcat(pathway, '\', folders{i});
    output = cell(31, length(electrodes)+1);
    
    output{2,1} = '5s';
    output{7,1} = '15s';
    output{12,1} = '25s';
    output{17,1} = '35s';
    output{22,1} = '45s';
    output{27,1} = '55s';
    for u = 3:5:28
        output{u,1} = '# of intervals';
    end
    
    for k = 4:5:29
        output{k,1} = 'mean (ms)';
    end
    
    for ii = 5:5:30
        output{ii,1} = 'std';
    end
    
    for jj = 6:5:31
        output{jj,1} = 'coefficient of variation';
    end
           
    %Delete electrode 15
    for p = 1:length(electrodes)-1
        if strcmp(electrodes{p}, 'adch_15.mat') == 1
            electrodes(p) = [];
        end
    end
    
    %Loop through each electrode
    for j = 1:length(electrodes)-3
        
        %Open each electrode file
        elec = strcat(path, '\', electrodes{j});
        load(elec);
        output{1,j+1} = electrodes{j};
        
        bin_spikes = binned_spikes_for_all_channels(1:6, j+1);
       
        count = 0;
        
        for bin = 1:6
                
            %Convert number of spikes to interspike interval
            if bin == 1
                if bin_spikes(bin) > 1
                    bin_spikes(bin) = bin_spikes(bin)-1;
            
                elseif bin_spikes(bin+1) > 1
                    bin_spikes(bin+1) = bin_spikes(bin+1)-1;
                
                elseif bin_spikes(bin+2) > 1
                    bin_spikes(bin+2) = bin_spikes(bin+2)-1;
                    
                elseif bin_spikes(bin+3) > 1
                    bin_spikes(bin+3) = bin_spikes(bin+3)-1;
                    
                elseif bin_spikes(bin+4) > 1
                    bin_spikes(bin+4) = bin_spikes(bin+4)-1;
                    
                elseif bin_spikes(bin+5) > 1
                    bin_spikes(bin+5) = bin_spikes(bin+5)-1; 
                    
                else
                    break;
                end
                
            end

            %Match spikes in bins to interspike intervaldata
            arr = zeros(1, bin_spikes(bin));
           
            for isi = 1:bin_spikes(bin);
                arr(isi) = isi_array(isi + count);
            end
            
            %Calculate coefficient of variation 
            M = mean(arr);
            S = std(arr);
            c_v = S/M;
            count = count + bin_spikes(bin);
               
            %Format output
            output{bin*5+1,j+1} = c_v;
            output{bin*5-1, j+1} = M;
            output{bin*5, j+1} = S;
            output{bin*5-2, j+1} = bin_spikes(bin);
        end
    end
    
%Calculate the average coefficient of variation for all electrode of an MEA for a bin    
ro = 2;
for panda = 6:5:31
    temp = output(panda, 2:length(electrodes)-2);
    temp = cell2mat(temp);
    total_mean = nanmean(temp);
    output{panda, length(electrodes)-1} = total_mean;   
    total_output{ro,col} = total_mean;
    ro = ro+1;
end

col = col+1;

xlswrite(savepathway, output);
end

xlswrite(savepathway2, total_output);
